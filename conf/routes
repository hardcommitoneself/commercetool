# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Untrail url
GET         /*path/                                            @controllers.ApplicationController.untrail(path: String)

# Map static resources from the /public folder to the /assets/public URL path
GET         /assets/public/*file                               controllers.Assets.at(path="/public", file)
# Map static resources from webjars (only CSS, JS, fonts and images) to the /assets URL path
GET         /assets/$file<(css|js|fonts|img)/.*>               controllers.WebJarAssets.at(file)

# Endpoint to manually refresh category tree (otherwise an app restart is required)
GET         /categories/refresh                                @controllers.CategoriesRefreshController.refresh()

# Shows the deployed version, artifactId and GIT SHA
GET         /version                                           @controllers.StatusController.version()
# Shows if the application is healthy
GET         /health                                            @controllers.StatusController.health()

# Main entry point that decides whether to go to home page or to setup wizard
GET         /                                                  @controllers.ApplicationController.index()
# Changes the language of the app
POST        /changeLanguage                                    @controllers.ApplicationController.changeLanguage()
# Changes the country of the app
POST        /:languageTag/changeCountry                        @controllers.ApplicationController.changeCountry(languageTag: String)
# Home page
GET         /:languageTag/home                                 @productcatalog.home.HomeController.show(languageTag: String)


->          /setup                                             setupwidget.Routes

# Shows the details of the cart belonging to the current session
GET         /:languageTag/cart                                 @shoppingcart.cartdetail.CartDetailPageController.show(languageTag: String)
# Adds the selected product to the cart
POST        /:languageTag/cart                                 @shoppingcart.cartdetail.CartDetailPageController.addToCart(languageTag: String)
# Removes a selected line item from the cart of the current session
POST        /:languageTag/cart/removeitem                      @shoppingcart.cartdetail.CartDetailPageController.processRemoveLineItem(languageTag: String)
# Changes the quantity of a selected line item from the cart of the current session
POST        /:languageTag/cart/quantity                        @shoppingcart.cartdetail.CartDetailPageController.processChangeLineItemQuantity(languageTag: String)

# Shows the form to enter shipping address and billing address
GET         /:languageTag/checkout/address                     @shoppingcart.checkout.address.CheckoutAddressController.show(languageTag: String)
# Processes the form of the shipping address and billing address
POST        /:languageTag/checkout/address                     @shoppingcart.checkout.address.CheckoutAddressController.process(languageTag: String)
# Shows the form to enter shipping address and billing address
GET         /:languageTag/checkout/shipping                    @shoppingcart.checkout.shipping.CheckoutShippingController.show(languageTag: String)
# Processes the form of the shipping address and billing address
POST        /:languageTag/checkout/shipping                    @shoppingcart.checkout.shipping.CheckoutShippingController.process(languageTag: String)
# Shows a form to select the payment method
GET         /:languageTag/checkout/payment                     @shoppingcart.checkout.payment.CheckoutPaymentController.show(languageTag: String)
# Processes the form for selecting a payment method
POST        /:languageTag/checkout/payment                     @shoppingcart.checkout.payment.CheckoutPaymentController.process(languageTag: String)
# Shows the form to create an order out of the cart of the session
GET         /:languageTag/checkout/confirmation                @shoppingcart.checkout.confirmation.CheckoutConfirmationController.show(languageTag: String)
# Processes the order creation
POST        /:languageTag/checkout/confirmation                @shoppingcart.checkout.confirmation.CheckoutConfirmationController.process(languageTag: String)
# Shows the customer a confirmation for the created order
GET         /:languageTag/checkout/thankyou                    @shoppingcart.checkout.thankyou.CheckoutThankyouController.show(languageTag: String)

# Shows the product detail page
GET         /:languageTag/:productSlug-$sku<[^-]+>.html        @productcatalog.productdetail.ProductDetailPageController.show(languageTag: String, productSlug: String, sku: String)

# Shows the search results page
GET         /:languageTag/search                               @productcatalog.productoverview.ProductOverviewPageController.search(languageTag: String, page: Int ?= 1)
# Shows the product overview page for this category
GET         /:languageTag/:categorySlug                        @productcatalog.productoverview.ProductOverviewPageController.show(languageTag: String, page: Int ?= 1, categorySlug: String)