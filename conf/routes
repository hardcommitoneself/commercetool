# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Untrail url
GET         /*path/                                            @controllers.ApplicationController.untrail(path: String)

# Map static resources from the /public folder to the /assets/public URL path
GET         /assets/public/*file                               controllers.Assets.at(path="/public", file)

# Map static resources from webjars (only CSS, JS, fonts and images) to the /assets URL path
GET         /assets/$file<(css|js|fonts|img)/.*>               controllers.WebJarAssets.at(file)

# Main entry point that decides whether to go to home page or to setup wizard
GET         /                                                  @controllers.ApplicationController.index()

# Home page
GET         /:languageTag/home                                 @controllers.HomeController.show(languageTag:String)


->          /setup                                             setupwidget.Routes

# shows the details of the cart belonging to the current session
GET         /:languageTag/cart                                 @purchase.CartDetailPageController.show(languageTag: String)
# removes a selected line item from the cart of the current session
POST        /:languageTag/cart/remove-line-item                @purchase.CartDetailPageController.processRemoveLineItem(languageTag: String)
# changes the quantity of a selected line item from the cart of the current session
POST        /:languageTag/cart/change-line-item-quantity       @purchase.CartDetailPageController.processChangeLineItemQuantity(languageTag: String)
# adds some products to the cart (should be removed in prod)
GET         /:languageTag/cart/fixtures                        @purchase.CartDetailPageController.setItemsToCart(languageTag: String)

# shows the form to enter shipping address and billing address
GET         /:languageTag/checkout/shipping                    @purchase.CheckoutShippingController.show(languageTag: String)
# processes the form of the shipping address and billing address
POST        /:languageTag/checkout/shipping                    @purchase.CheckoutShippingController.process(languageTag: String)
# shows a form to select the payment method
GET         /:languageTag/checkout/payment                     @purchase.CheckoutPaymentController.show(languageTag: String)
# processes the form for selecting a payment method
POST        /:languageTag/checkout/payment                     @purchase.CheckoutPaymentController.process(languageTag: String)
# shows the form to create an order out of the cart of the session
GET         /:languageTag/checkout/confirmation                @purchase.CheckoutConfirmationController.show(languageTag: String)
# processes the order creation
POST        /:languageTag/checkout/confirmation                @purchase.CheckoutConfirmationController.process(languageTag: String)
# shows the customer a confirmation for the created order
GET         /:languageTag/checkout/thankyou                    @purchase.CheckoutThankyouController.show(languageTag: String)


GET         /:languageTag/:productSlug-$sku<[^-]+>.html        @productcatalog.controllers.ProductDetailPageController.show(languageTag: String, productSlug: String, sku: String)

GET         /:languageTag/search                               @productcatalog.controllers.ProductOverviewPageController.search(languageTag: String, page: Int ?= 1, pageSize: Int ?= 9, q: String ?= "")
GET         /:languageTag/:categorySlug                        @productcatalog.controllers.ProductOverviewPageController.show(languageTag: String, page: Int ?= 1, pageSize: Int ?= 9, categorySlug: String)